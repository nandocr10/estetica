

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Grupo {
  id     Int     @id @default(autoincrement())
  nome String?
}

model Grpacess {
  CodGrp    Int     @id @default(autoincrement())
  NomeGrp  String
}


model User {
  id      Int      @id @default(autoincrement())
  username    String @unique
  email       String?
  password    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Fornecedor {
  id         Int      @id @default(autoincrement())
  CnpjFor    String   @unique    // CHAR(14)
  NmFor      String?             // VARCHAR(100)
  FoneFor    String?             // CHAR(11)
  EmailFor   String?             // CHAR(50)
  DtCad      DateTime? // DATE

  // Relacionamentos
  Produtos   Produto[]
}


model Cliente {
  Codcli       Int       @id @default(autoincrement())
  NmCli        String?   @db.VarChar(150)
  CpfCli       String?   @db.Char(11)
  FoneCli      String?   @db.Char(11)
  EmailCli     String?   @db.VarChar(50)
  EndCli       String?   @db.VarChar(150)
  CepCli       String?   @db.Char(9)
  ComplCli     String?   @db.VarChar(50)
  redesocial   String?   @db.VarChar(50)
  DtUltCompra  DateTime? @db.Date

  atendimentos Atendimento[]
}

model Servico {
  CodServ Int      @id @default(autoincrement())
  DsServ  String?  @db.VarChar(100)
  DtCad   DateTime? @db.Date

  atendServ AtendServ[]
}

model Atendimento {
  CodAtend   Int          @id @default(autoincrement())
  Codcli     Int
  DtAgen     DateTime?    @db.Date
  DtCad      DateTime?    @db.Date
  DtVenda    DateTime?    @db.Date
  Obs        String?      @db.VarChar(100)
  cliente    Cliente      @relation(fields: [Codcli], references: [Codcli])
  Staatend   Int?     @default(1) 
  
  atendServ  AtendServ[]  // Relacionamento com AtendServ

  @@index([Codcli], name: "Atendimento_FKIndex1")
}

model Profissional {
  CodProf    Int      @id @default(autoincrement())
  NmProf     String?  @db.VarChar(100)
  CpfProf    String?  @db.Char(11)
  DtCad      DateTime? @db.Date
  DocReg     String?  @db.VarChar(50)
  FoneProf   String?  @db.Char(11)
  EmailProf  String?  @db.VarChar(50)
  AtivProfi  String?  @db.VarChar(100)

  atendServ AtendServ[]
}

model AtendServ {
  CodAtend    Int      // Parte da chave primária
  CodServ     Int      // Parte da chave primária
  CodProf     Int?     // Campo opcional
  DtAgen      DateTime? // Campo opcional
  FtEnt01 String?  @db.MediumText // Use MediumText para até 16 MB
  FtEnt02     String?  @db.MediumText // Use MediumText para até 16 MB
  FtRet01     String?  @db.MediumText // Use MediumText para até 16 MB
  FtRet02     String?  @db.MediumText // Use MediumText para até 16 MB
  VrServ      Decimal? // Campo opcional
  PercComis   Decimal? // Campo opcional
  Obs         String?  // Campo opcional
  Tppgto      Int?    // Campo opcional
  Stapgto     Int?   // Campo opcional
  Percdes     Decimal?   // Campo opcional
  Dtpgto      DateTime? @db.Date
  

  atendimento Atendimento @relation(fields: [CodAtend], references: [CodAtend])
  servico     Servico     @relation(fields: [CodServ], references: [CodServ])
  profissional Profissional? @relation(fields: [CodProf], references: [CodProf])

  // Definição da chave primária composta
  @@id([CodAtend, CodServ]) // Define a chave primária composta
  @@index([CodAtend], name: "Atendimento_has_Servico_FKIndex1")
  @@index([CodServ], name: "Atendimento_has_Servico_FKIndex2")
  @@index([CodProf], name: "AtendServ_FKIndex3")
}

model Produto {
  id             Int      @id @default(autoincrement()) @unique
  Fornecedor_id  Int
  DsProdt        String?  @db.VarChar(100)
  NmAbr          String?  @db.Char(40)
  DtCad          DateTime? 
  UnMedida       String?  @db.Char(3)
  TpCateg        String?  @db.Char(1)
  QtdEstoq       Decimal? @db.Decimal(10,0)
  DtUltComp      DateTime?
  VrUltComp      Decimal? @db.Decimal(12,2)
  DtPenultComp   DateTime?
  VrPenultComp   Decimal? @db.Decimal(12,2)
  DtVenc         DateTime?
  
  // Relacionamento com Fornecedor
  Fornecedor     Fornecedor @relation(fields: [Fornecedor_id], references: [id])

}

